//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RequestServiceClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IRequest")]
    public interface IRequest {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequest/SendRequest", ReplyAction="http://tempuri.org/IRequest/SendRequestResponse")]
        void SendRequest(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequest/SendRequest", ReplyAction="http://tempuri.org/IRequest/SendRequestResponse")]
        System.Threading.Tasks.Task SendRequestAsync(string request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRequestChannel : RequestServiceClient.ServiceReference1.IRequest, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestClient : System.ServiceModel.ClientBase<RequestServiceClient.ServiceReference1.IRequest>, RequestServiceClient.ServiceReference1.IRequest {
        
        public RequestClient() {
        }
        
        public RequestClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RequestClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendRequest(string request) {
            base.Channel.SendRequest(request);
        }
        
        public System.Threading.Tasks.Task SendRequestAsync(string request) {
            return base.Channel.SendRequestAsync(request);
        }
    }
}
